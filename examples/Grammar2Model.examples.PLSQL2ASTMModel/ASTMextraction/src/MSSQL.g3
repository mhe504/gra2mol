grammar MSSQL; 

//Keywords
ALLOW_PAGE_LOCKS:	'ALLOW_PAGE_LOCKS';
ALLOW_ROW_LOCKS:	'ALLOW_ROW_LOCKS';
ALTER:			'ALTER';
ANSI_NULLS:		'ANSI_NULLS';
ASC:			'ASC';
AS_1: 			'AS (';
AS_2: 			'AS ((';
CASE:			'case';
CLUSTERED:		'CLUSTERED';
CONSTRAINT:		'CONSTRAINT';
CONVERT:		'CONVERT';
CREATE:			'CREATE';
DESC:			'DESC';
DISABLE:		'DISABLE';
ELSE:			'else';
ENABLE:			'ENABLE';
END:			'end';
FILLFACTOR:		'FILLFACTOR';
GO:			'GO';
IDENTITY: 		'IDENTITY';
IGNORE_DUP_KEY:		'IGNORE_DUP_KEY';
IS:			'IS';
KEY:			'KEY';
MAX:			'max';
NONCLUSTERED:		'NONCLUSTERED';
NOT:			'NOT';
NULL:			'NULL';
OFF:			'OFF';
ON:			'ON';
OPTIONS:		'LOCK_ESCALATION';
PAD_INDEX:		'PAD_INDEX';
PRIMARY:		'PRIMARY';
QUOTED_IDENTIFIER:	'QUOTED_IDENTIFIER';
SET:			'SET';
SPARSE:			'SPARSE';
STATISTICS_NORECOMPUTE:	'STATISTICS_NORECOMPUTE';
TABLE :	 		'TABLE';
THEN:			'then';
WHEN:			'when';
WITH:			'WITH';

//Data types
BIT:			'bit';
DATETIME:		'datetime';
DATE_TIME:		'smalldatetime';
FLOAT:			'float';
INT:			'int' | 'smallint' | 'tinyint' | 'bigint';
SQL_VARIANT:		'sql_variant';
UNIQUEIDENTIFIER:	'uniqueidentifier';
VARBINARY:		'varbinary' | 'binary';
VARCHAR:		'varchar' | 'nvarchar' | 'char' | 'nchar';
XML:			'xml';
NUMBER:			('0'..'9')+;
IDENTIFER: 		('a'..'z'|'A'..'Z' | '_' | '0'..'9')+;

//Delimiters and operators
AMPERSAND:		'&';
CLOSE_BRKT:		')';
CLOSE_SQUARE_BRKT:	']';
COMMA			:',';
DIVIDE:			'/';
EQUALS:			'=';
GREATER_THAN:		'>';
LESS_THAN:		'<';
MINUS:			'-';
MODULUS:		'%';
MULTIPLY:		'*';
NOT_EUAL:		'<>';
OPEN_BRKT:		'(';
OPEN_SQUARE_BRKT:	'[';
PLUS:			'+';
POINT:			'.';
QUOTE:		 	'\'';

//Hiden Tokens
WS  :   ( ' '|  '\t' | '\r'| '\n') {$channel=HIDDEN;};

//Parser Rules
sql_dump :	 (set_optition  | create_table | alter_table)*;

set_optition :	SET  (ANSI_NULLS | QUOTED_IDENTIFIER) ON;

create_table :	CREATE TABLE OPEN_SQUARE_BRKT IDENTIFER CLOSE_SQUARE_BRKT OPEN_BRKT 
		(column | computed_column)+
		constraint?
		table_opitions? CLOSE_BRKT ON OPEN_SQUARE_BRKT PRIMARY CLOSE_SQUARE_BRKT GO;

alter_table :	ALTER TABLE OPEN_SQUARE_BRKT IDENTIFER CLOSE_SQUARE_BRKT 
		SET OPEN_BRKT OPTIONS EQUALS (ENABLE | DISABLE) CLOSE_BRKT;

column :	OPEN_SQUARE_BRKT IDENTIFER CLOSE_SQUARE_BRKT (data_type | user_defined_type) column_optitions? COMMA?;
column_optitions: 'COLUMN_SET FOR ALL_SPARSE_COLUMNS'? SPARSE? NOT? NULL;

constraint : CONSTRAINT OPEN_SQUARE_BRKT IDENTIFER CLOSE_SQUARE_BRKT PRIMARY KEY (CLUSTERED | NONCLUSTERED) 
	 OPEN_BRKT
	 	(OPEN_SQUARE_BRKT IDENTIFER CLOSE_SQUARE_BRKT (ASC | DESC) COMMA?)+
	 CLOSE_BRKT;

table_opitions : WITH OPEN_BRKT ((PAD_INDEX | STATISTICS_NORECOMPUTE | IGNORE_DUP_KEY | ALLOW_ROW_LOCKS | ALLOW_PAGE_LOCKS)
	 EQUALS (ON | OFF) COMMA)+ FILLFACTOR EQUALS NUMBER CLOSE_BRKT ON OPEN_SQUARE_BRKT PRIMARY CLOSE_SQUARE_BRKT;

data_type:OPEN_SQUARE_BRKT (UNIQUEIDENTIFIER | INT | DATETIME | VARBINARY | BIT | VARCHAR | FLOAT | SQL_VARIANT | XML | DATE_TIME) CLOSE_SQUARE_BRKT (OPEN_BRKT (NUMBER | MAX) CLOSE_BRKT)?
		(IDENTITY OPEN_BRKT (NUMBER | MAX) COMMA (NUMBER | MAX) CLOSE_BRKT)? ;
		
user_defined_type :	OPEN_SQUARE_BRKT IDENTIFER CLOSE_SQUARE_BRKT POINT OPEN_SQUARE_BRKT IDENTIFER CLOSE_SQUARE_BRKT;

computed_column	:	OPEN_SQUARE_BRKT IDENTIFER CLOSE_SQUARE_BRKT 
			(AS_1 .*  END CLOSE_BRKT | 
			 AS_2 CONVERT OPEN_BRKT OPEN_SQUARE_BRKT VARCHAR CLOSE_SQUARE_BRKT COMMA OPEN_SQUARE_BRKT IDENTIFER CLOSE_SQUARE_BRKT DIVIDE OPEN_BRKT NUMBER CLOSE_BRKT COMMA NUMBER CLOSE_BRKT PLUS QUOTE POINT QUOTE CLOSE_BRKT PLUS CONVERT OPEN_BRKT OPEN_SQUARE_BRKT VARCHAR CLOSE_SQUARE_BRKT COMMA OPEN_SQUARE_BRKT IDENTIFER CLOSE_SQUARE_BRKT MODULUS OPEN_BRKT NUMBER CLOSE_BRKT COMMA NUMBER CLOSE_BRKT CLOSE_BRKT) column_optitions?  COMMA?;
