-- *******************************************************************************
-- * Copyright (c) 2010
-- * All rights reserved. This program and the accompanying materials
-- * are made available under the terms of the Eclipse Public License v1.0
-- * which accompanies this distribution, and is available at
-- * http://www.eclipse.org/legal/epl-v10.html
-- *
-- * Contributors:
-- *    Javier Canovas (jlcanovas@um.es) 
-- *******************************************************************************


--------------------------------------------------------------------------------------
-- Gra2MoL transformation definition for extracting ASTM models from PL/SQL DDL
-- Author: Javier Luis Canovas Izquierdo (jlcanovas@um.es)
--
-- TODO: 
--------------------------------------------------------------------------------------

hash columnTypeType
	"VARCHAR2" -> "VARCHAR",
	"NUMBER" -> "NUMBER",
	"DATE" -> "DATE"	
end_hash

rule 'mapProject'
	from ccompilationUnit sf
	to astm::gastm::Project
	queries
		cu : //#CST;
	mappings
		files = cu;
end_rule

rule 'mapCompilationUnit'
	from CST cst
	to astm::gastm::CompilationUnit
	queries
		cts : /cst//sql_dump/#create_table;
	mappings
		language = "PL/SQL";
		fragments = cts;
end_rule

rule 'mapRDBTableDefinition'
	from	create_table ct
	to		astm::sastm::RDBTableDefinition
	queries
		-- Table columns
		cols  : /ct//#column;
		-- Primary Keys
		pks   : /ct//#constraint;

	mappings
		identifierName = new astm::gastm::Name;
		identifierName.nameString  = ct.IDENTIFER;
		Column = cols;
		PrimKey = pks;
end_rule

rule 'mapRDBColumnDefinition'
	from column col
	to astm::sastm::RDBColumnDefinition
	queries
		notnull   : /col/#column_optitions{NOT.exists};	
		isNumber  : /col/#data_type{INT.exists || FLOAT.exists || BIT.exists};
		isVarchar : /col/#data_type{VARCHAR.exists || UNIQUEIDENTIFIER.exists};
		isDate    : /col/#data_type{DATE_TIME.exists || DATETIME.exists};
	mappings
		identifierName = new astm::gastm::Name;
		identifierName.nameString  = col.IDENTIFER;
		if(isNumber.hasResults) then
			type = new astm::sastm::RDBNumber;
		else
			if(isVarchar.hasResults) then
				type = new astm::sastm::RDBVarchar;
			else
				if(isDate.hasResults) then
					type = new astm::sastm::RDBDate;
				end_if
			end_if
		end_if
		--typeParam = col.NUMBER;
		if(notnull.hasResults) then
			NotNull = "false";
		end_if
end_rule

-----------------------------------------------------
-- PRIMARY KEY
-----------------------------------------------------

rule 'mapRDBColumnReference'
	from primary_key pk
	to astm::sastm::RDBColumnReference
	queries
		name   : /pk/#colname;
		table  : //#create_table//primary_key{this.check(pk)};
		colDef : /table//#column{ID.eq(name.ID)};
	mappings
		name = new astm::gastm::Name;
		name.nameString = name.ID;
		refersTo = colDef;
end_rule
